1)Основные харрактеристики:
Компилируемый язык - код переводится в машиннный код без посредников, что ускоряет процесс.

Сочетает высокоуровневое программирование и низкоуровневое - очевидно: в зависимости от целей
можно спускатьься на разную "глубину"

мультипарадигменность - позволяет производить функциональное, ОО и шаблонное программирование.

Статическая типизация - тип данных каждой переменной заранее известен и не может быть "случайно" изменен
без уничтожения переменной и создаания новой.

2) bool логический тип данных. Занимает 1 байт
значение false эквивалентно 0, true всему остальному. Применимы логические операции.

char символьный тип. так же 1 байт. ([-128,127] обычно ), есть версия unsigned. 

int целочисленный тип. Есть 1,2,4 и 8 байтные версии.

float/ double тип данных с плавающей точкой. Особенность в том, что все операции проводятся с какой-то не бесконечной точностью.

ну и void - тип ничего.

3) Проблема переносимости возникает при переносе кода на другой компьютер или компилятор. Чтобы предотвратить,
стоит использовать только первые 127 из стандартной таблицы. И не использовать типы данных нга пределе их диапазона. 

4)Определение - по сути, информирование о том, что такой объект присутствует в коде (тип и название)
  Объявление - (тип, название, вся необходимая для использования информация)
  Инициализация - первое присваивание при объявлении.
  Присваивание - изменение значения на новое по ходу программы.

5)Процессор читает память "по словам", и неправильное вравнивание может приводить к 
необходимости лишних процедур таких как: прочтение большего кол-ва слов, обрезка и тд.


Теор задача:
можно осуществить обмен путем нескольких арифметических действий.
Пусть А,Б - переменные, а,б - их начальные значения.

1)
А=а
Б=б
прибваляем первое ко второму
2)
А=а
Б=а+б
вычитаем из первого второе
3)
А=-б
Б=а+б
опять прибавляем первое ко второму
4)
А=-б
Б=а
меняем знак первого и получаем:
А=б и Б=а.